name: ci
on: push

jobs:
  prepare:
    runs-on: ubuntu-22.04
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v4

      - name: Create matrix for test splitting
        id: set-matrix
        uses: bahmutov/gh-build-matrix@main
        with:
          n: 5 # Number of containers to output

  test-split:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4, 5 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install
        working-directory: cypress

      - name: Determine Specs to Run
        id: get-specs
        run: |
          # Hypothetical script/command to list and split your test specs based on SPLIT and SPLIT_INDEX
          SPECS_TO_RUN=$(node determine-specs.js --total ${{ strategy.job-total }} --index ${{ strategy.job-index }})
          echo "Specs to run: $SPECS_TO_RUN"
          echo "::set-output name=specs::$SPECS_TO_RUN"

      - name: Run Split Cypress Tests
        run: npx cypress run --spec ${{ steps.get-specs.outputs.specs }}
        working-directory: cypress

      - name: Upload Results for Merging
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-${{ matrix.container }}
          path: |
            cypress/screenshots
            cypress/videos
            cypress/results
          if-no-files-found: ignore

  merge-reports:
    needs: test-split
    if: always()
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: cypress/

      - name: Install Dependencies
        run: npm install
        working-directory: cypress

      - name: Merge Test Results
        run: npm run merge-reports
        working-directory: cypress
        # Ensure you have a script in your package.json for merging reports

      - name: Generate Final Test Report
        run: npm run generate-report
        working-directory: cypress
        # Ensure you have a script in your package.json for generating the final report

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit Combined Report
        run: |
          git add ./reports/combined-report.json
          git commit -m "Update combined report with latest test results" || true

      - name: Push Changes
        run: git push
